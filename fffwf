#все должно воркать, по крайней мере я на это надеюсь

import nest_asyncio  
nest_asyncio.apply()
import logging  
from datetime import datetime  
from telegram import Update  
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes  
import asyncio  

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)  
logger = logging.getLogger(__name__)  
  
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:  
    await update.message.reply_text('Ку! Отправь дату в формате ГГГГ-ММ-ДД, я скажу скок осталось дней.')  

async def calculate_days(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:  
    try:  
        input_date = update.message.text  
        target_date = datetime.strptime(input_date, '%Y-%m-%d').date()  
        today = datetime.now().date()  

        delta = (target_date - today).days  

        if delta > 0:  
            await update.message.reply_text(f'До {input_date} осталось {delta} дней.')  
        elif delta < 0:  
            await update.message.reply_text(f'С {input_date} прошло {-delta} дней.')  
        else:  
            await update.message.reply_text('Бро эта дата прям щас!')  
    except ValueError:  
        await update.message.reply_text('Не, нужна именно в таком формате дата ГГГГ-ММ-ДД и нужна С ДЕФИЗАМИ а не точками.')  
 
async def error(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:  
    logger.warning(f'Update {update} caused error {context.error}')  

async def main() -> None:    
    app = ApplicationBuilder().token("8114338600:AAHjlsRWOz3XRyqogCQ3Jm7rzuwSsS9-37g").build()  

    app.add_handler(CommandHandler("start", start))  
  
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, calculate_days))  

    app.add_error_handler(error)  
  
    await app.run_polling()  

if __name__ == '__main__':  
    try:  
        asyncio.run(main())  
    except RuntimeError as e:  
        if str(e) == "This event loop is already running":  
            print("Event loop is already running. Please run this script in a standard Python environment.")  
        else:  
            raise
